{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { USER_LOGIN, USER_PROFILE, USER_ERROR } from './types';\nexport var submitCredentials = function submitCredentials(_ref) {\n  var email, password, _await$axios$post, data, _e$response, status, statusText;\n\n  return _regeneratorRuntime.async(function submitCredentials$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          email = _ref.email, password = _ref.password;\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.post('/auth/login', {\n            email: email,\n            password: password\n          }));\n\n        case 4:\n          _await$axios$post = _context.sent;\n          data = _await$axios$post.data;\n          return _context.abrupt(\"return\", {\n            type: USER_LOGIN,\n            payload: data\n          });\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](1);\n          _e$response = _context.t0.response, status = _e$response.status, statusText = _e$response.statusText;\n          return _context.abrupt(\"return\", {\n            type: USER_ERROR,\n            payload: {\n              status: status,\n              statusText: statusText\n            }\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\nexport var getUser = function getUser() {\n  var _await$axios$get, data, _e$response2, status, statusText;\n\n  return _regeneratorRuntime.async(function getUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.get('/user/profile'));\n\n        case 3:\n          _await$axios$get = _context2.sent;\n          data = _await$axios$get.data;\n          return _context2.abrupt(\"return\", {\n            type: USER_PROFILE,\n            payload: data\n          });\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _e$response2 = _context2.t0.response, status = _e$response2.status, statusText = _e$response2.statusText;\n          return _context2.abrupt(\"return\", {\n            type: USER_ERROR,\n            payload: {\n              status: status,\n              statusText: statusText\n            }\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/React/Next/next-auth/client/utilities/auth.js"],"names":["axios","USER_LOGIN","USER_PROFILE","USER_ERROR","submitCredentials","email","password","post","data","type","payload","response","status","statusText","getUser","get"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,UAAnC,QAAqD,SAArD;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,QAASA,KAAT,EAAgBC,QAAhB,QAAgBA,QAAhB;AAAA;AAAA;AAAA,2CAEFN,KAAK,CAACO,IAAN,CAAW,aAAX,EAA0B;AAAEF,YAAAA,KAAK,EAALA,KAAF;AAASC,YAAAA,QAAQ,EAARA;AAAT,WAA1B,CAFE;;AAAA;AAAA;AAEjBE,UAAAA,IAFiB,qBAEjBA,IAFiB;AAAA,2CAGlB;AACHC,YAAAA,IAAI,EAAER,UADH;AAEHS,YAAAA,OAAO,EAAEF;AAFN,WAHkB;;AAAA;AAAA;AAAA;AAAA,wBASM,YAAEG,QATR,EASjBC,MATiB,eASjBA,MATiB,EASTC,UATS,eASTA,UATS;AAAA,2CAUlB;AACHJ,YAAAA,IAAI,EAAEN,UADH;AAEHO,YAAAA,OAAO,EAAE;AACLE,cAAAA,MAAM,EAANA,MADK;AAELC,cAAAA,UAAU,EAAVA;AAFK;AAFN,WAVkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAoBP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEQd,KAAK,CAACe,GAAN,CAAU,eAAV,CAFR;;AAAA;AAAA;AAEPP,UAAAA,IAFO,oBAEPA,IAFO;AAAA,4CAGR;AACHC,YAAAA,IAAI,EAAEP,YADH;AAEHQ,YAAAA,OAAO,EAAEF;AAFN,WAHQ;;AAAA;AAAA;AAAA;AAAA,yBASgB,aAAEG,QATlB,EASPC,MATO,gBASPA,MATO,EASCC,UATD,gBASCA,UATD;AAAA,4CAUR;AACHJ,YAAAA,IAAI,EAAEN,UADH;AAEHO,YAAAA,OAAO,EAAE;AACLE,cAAAA,MAAM,EAANA,MADK;AAELC,cAAAA,UAAU,EAAVA;AAFK;AAFN,WAVQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB","sourcesContent":["import axios from 'axios';\r\nimport { USER_LOGIN, USER_PROFILE, USER_ERROR } from './types';\r\n\r\nexport const submitCredentials = async ({ email, password }) => {\r\n    try {  \r\n        const { data } = await axios.post('/auth/login', { email, password });\r\n        return {\r\n            type: USER_LOGIN,\r\n            payload: data\r\n\r\n        }\r\n    } catch(e) {\r\n        const { status, statusText } = e.response;\r\n        return {\r\n            type: USER_ERROR,\r\n            payload: {\r\n                status,\r\n                statusText\r\n            }\r\n        }\r\n    } \r\n}; \r\n\r\nexport const getUser = async () => {\r\n    try {\r\n        const { data } = await axios.get('/user/profile');\r\n        return {\r\n            type: USER_PROFILE,\r\n            payload: data\r\n        }\r\n        \r\n    } catch(e) {\r\n        const { status, statusText } = e.response;\r\n        return {\r\n            type: USER_ERROR,\r\n            payload: {\r\n                status,\r\n                statusText\r\n            }\r\n        }\r\n    }   \r\n}"]},"metadata":{},"sourceType":"module"}